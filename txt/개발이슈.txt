(번호는 커밋순서를 의미합니다)

1~4
<뼈대 및 로그인&로그아웃&회원가입 구현>
express generator로 플젝 만들고 인증기능 추가.
인증은 아직 원리가 낯설어서 지난 프로젝트 코드를 참조했지만,
차후에 쿠키부터 passport까지 원리를 공부할 예정.
지난 플젝에서 나아간 점은 생활코딩을 강좌를 통해 플래시 메세지를 사용했다는 점.
다음엔 user정보 입력부터 ㄱㄱ해야겠다.

5
<사용자 추가정보 입력(기본정보) 구현>
사용자 회원가입 후 첫 로그인 시 입력할 추가정보가 많다.
이를 위해 first_login 라우터와 퍼그 작업 시작함.
지난 플젝에서 나아간 점으로는
예전엔 mongoose에서 유저정보를 수정할 때 findOne().exec()했었는데
findOneandUpdate()로 한큐에, 그리고 직관적으로 해결했다.

사용자가 버튼을 누르면 textbox가 늘어나는 것,
그 값들을 db에 저장하는 것까지 공부해서 구현할 예정.

6-7
<사용자 추가정보 입력(포트폴리오) 구현>
Pfolio와 Ecert 콜렉션을 추가하고,
User와 함께 각자의 id를 참조하게 했다.
pug에서(인터넷에서 긁어왔지만) 동적으로 텍스트박스를 만들어
position, awards, projects, interns 정보를 받아
DB에 저장하는 것까지 완료.

이제 school, major, club을 띄워주고
사용자가 선택하면 그 id를 User db에 넣는 걸 해야겠다.

20190819
browse extracurricular database 기초는 다 만듬.
보완할 점으로는
사진표시와 시간표시
이게 해결되면
mypage로 넘어가자.

20190820
이미지를 어떻게 띄울까 주구장창 연구하다
풀로 띄우는건 성공했는데
pug에 넘기는 건 아직 못했다.

나중에 bootstrap 써서 디자인 해도 될듯.
노가다의 연속이었지만
결국 어떻게든 이미지를 띄우는 과정에서 틀을 좀 잡았다.

20190821
드디어 프로필 사진을 띄우는 걸 성공했다!!
맞는 방법인지는 모르겠지만
mypage라우터에서 사진'만'띄우는 거를 하나 짜고
img의 ref를 글루 연결시켰다.

extracurricular 사진도 업로드하고 싶은데
그럴려면 admin 페이지를 만들어야 하니 좀 나중에 하자.

다음엔 school과 club을 짜보자.

20190822
school과 club은 무난하게 짰다.
근데 지금 생각해보니 고쳐야 할 게 너무 많다.
코딩스타일을 통일해야 하는데, 일단 지금부터 제대로 하고 나중에 리팩토링 해야겠다.
다음번엔 admin페이지를 만들어 각각의 db에 사진을 업로드하고, 그걸 보여주는 것까지 해야겠다.
일단 admin페이지는 user에 admin 속성을 넣어 할 예정.

그리고 mongodb도 클라우드가 되더라. 이름은 아틀라스고 링크는
https://cloud.mongodb.com/v2/5d4914d8ff7a255106be6381#clusters
이다.

null과 ''의 차이점도 인지했으니 다음부터는 웬만하면 ''로 통일하자.

이제 많은 양의 데이터를 넣어야 하므로 그 전에
필요한 DB를 확정하고 리팩토링..도 거쳐야 할 것 같다.
따라서 거시적으로 순서는
admin -> 사진업로드 -> 사진표시 -> 리팩토링 -> 많은양의데이터 -> 필터 -> 디자인
으로 가는 게 지금 생각이다.


20190827
코드 리팩토링을 전반적으로 진행했다.
단복수 명확히 하고, 콜백함수 모두 ()=>로 통일하고, 주석을 달았다.

pug에서 a(href='') 들어가는 부분에서
/club과 /club/은 다르다는 것 또한 알았다.

앞으로의 작업은
portfolio 부분 -> palette 설정
-> admin라우터와 사진업로드
-> 대규모 데이터삽입 및 필터와 검색창, db 클라우드화
-> 오류수정
-> 디자인 및 유지보수
-> 배포
로 방향을 잡았다.

이제 개강으로 바빠질테니, 시간 날때마다 틈틈히 코딩하자.

20190828
portfolio 부분 완료.
palette 설정은 아직 안했고
admin라우터에서 exc 사진업로드 부분을 완료했다.

사실 100% 이해한 건 아닌 것 같은데
이렇게저렇게어떻게 하다보니까 딱 되었다. 나중에 그 원리를 공부할 생각.

그래서 /exc/:id로 가면 그 exc의 사진을 볼 수 있게 되었다.
일단 확장은
school과 club의 show부분을 똑같이 가고
그 다음엔 그냥 /exc, /school, /club 에 나오는 리스트에서
사진도 같이 나올 수 있게 해야겠다.

약간 생각하고 있는 부분 중 하나는
이제 grid뭐시기 부분이 여기저기 막 쓰일텐데
library로 몰아 통일할 수는 없을까? 그것도 차차 연구해보자.

20190829
School과 Club에도 이미지 업로드 및 조회를 완료했다.
Exc의 코드를 거의 활용해서 쉬웠는데
마지막에 models의 save함수를 잘못 짰던 바람에 시간을 좀 날렸다.
그래도 중요한 오류를 바로잡을 수 있어서 의미있었다.
일단 admin페이지에서 crud가 모두 되어야 하는데
read와 create는 완료한 상황.
delete 바로 작업 들어가자.

코드리팩토링은 주기적으로 해주는게 좋을 것 같은데
테스트하느라 썼던 console.log부분 지워주자.


20190830
delete 작업까지 완료. 오늘 몸이 안좋아서 많이 하진 못했다.
팔레트설정도 해보자. 지금 생각하는 방안은
first_login/palette에서 선택을 하게 하되 3개를 맥스로 ㄱㄱ.
그리고 똑같이 mypage에 보여주는 것이다.
근데 palette는 타입을 어떻게 해야 하나?
uniband에서 enum 쓴거 똑같이 해보자.

이제 진자 palette까지만 넣어주면 본격적인 db확장 시작.


20190908
admin 오류수정을 했다. 사실 adminCheck로 모듈화를 하면 좋을텐데 그렇게 하면 에러가 떠서 그냥 admin라우터 코드를 길게 늘렸다.
모듈화는 가-장 나중에 생각하고(업로드 관련 코드도 마찬가지), 일단 잘 작동하는 데 초점을 두자.

txt파일 중 안쓰는 파일 정리하고, 드디어 readme.md를 만들었다.

에러는 아닌데 경고가 뜨는 걸로, signup 직후
error: can't set headers after they are sent.
가 뜬다. 왜 뜨는지 모르겠다.

웬만한 건 정상적으로 작동하므로, 필터를 만들려고 한다.
일단 모든 백엔드 기능은 이제부터 exc에 집중을 해야 할 것 같다.
크게 해야할 건 순서대로
1. 필터
2. 지원 및 ecert 기능
3. (react를 배운 뒤) 사진을 바로 띄우는 기능

exc 필터 : price, palette, date, location(gu)
이므로
1) exc에 price, palette, gu를 추가해야겠다. v
2) 필터 구현

필터 구현은..
아이디어는 있는데
url로 어떻게 구현을 해야할 지 모르겠다.
/exc/search로 뭉뚱그릴수 없을까?

